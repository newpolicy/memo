**익명 클래스 만들기: 클래스 없이 인스턴스를 만드는 것
클래스나인터페이스이름 변수명 = new 클래스나인터페이스이름(){
	메소드
};

**TextListener
=>텍스트 필드나 텍스트 에러리어에서 키보를 눌러서 글자가 변경되면 발생하는 이벤트를 처리하는 인터페이스

**KeyListener
=>키보드를 눌렀을 때 처리를 위한 인터페이스
=>이벤트 처리 메소드에 KeyEvent 가 전달되는데 이 매개변수의 getKeyChar()를 호출하면 누른 문자가 리턴되는데 대소문자 구분을 하지만 문자 이외의 키에는 반응을 하지 않음
getKeyCode()는 누른 키보드의 코드 값을 리턴하는데 대소문자 구분을 하지 못합니다.
문자 이외의 키에도 반응을 합니다.
KeyEvent의 field(상수)로 값이 리턴됩니다.

**MouseListener 
=>마우스 포인터가 영역 내에 들어오거나 영역 에서 벗어날 때 클릭했을 때 누르고 있을 때 손을 뗏을 때 처리를 위한 리스너
=>메소드의 매개변수는 MouseEvent 인스턴스 인데 이 인스턴스의 메소드를 호출하면 마우스 포인터의 위치와 동작을 알아낼 수 있습니다.

**MouseMotionListener
=>마우스를 움직일 때 처리를 위한 리스너
=>버튼을 누르고 움직일 때 와 그냥 움직일 때 처리를 위한 메소드가 만들어져 있습니다.
=>메소드의 매개변수는 MouseEvent 입니다.

**WindowListener
=>윈도우를 조작하기 위한 처리를 할 때 사용하는 리스너

**Adapter Class
=>Listener 인터페이스 중에서 메소드를 2개 이상 가진 인터페이스를 구현한 클래스
=>메소드의 내용은 아무것도 없습니다.
=>Listener 인터페이스를 이용하면 모든 메소드를 재정의해야 하지만 Adapter 클래스를 이용하면 필요한 메소드만 재정의 하면 됩니다.
=>인터페이스를 이용하면 코드 센스 기능을 이용해서 메소드를 쉽게 만들 수 있지만 클래스를 이용하면 메소드를 직접 만들어야 해서 코딩 할 때는 오히려 불편합니다.

**Swing - javax.swing
=>AWT는 운영체제의 자원을 가지고 GUI 프로그램을 하지만 Swing은 운영체제와 상관없이 JVM의 자원을 가지고 GUI 프로그램을 합니다.
=>운영체제 종류에 상관없이 동일한 UI를 갖습니다.
=>더블 버퍼링을 이용하기 때문에 출력속도도 AWT에 비해서 빠릅니다.

1.JFrame
=>윈도우에 해당하는 클래스

2.JPanel
=>여러 개의 컴포넌트들을 묶어서 배치하기 위한 컨테이너

3.JScrollPane
=>화면 출력 영역보다 더 큰 컴포넌트를 스크롤 바와 함께 출력하는 컨테이너
=>하나의 컴포넌트만 배치할 수 있습니다.

4.보더와 툴팁을 추가할 수 있습니다.
=>border: 경계선 - setBorder
=>tooltip: 마우스를 올려놓았을 때 보여지는 텍스트 - setTooltipText

5.JLabel
=>레이블
=>레이블에 이미지를 출력할 수 있습니다.
=>이미지 아이콘 만들기
new ImageIcon("이미지 파일의 경로")

6.버튼
1)JButton: 클릭해서 작업을 수행하도록 하기 위한 컴포넌트
2)JToggleButton: 눌러진 상태와 누를 수 있는 상태 2가지를 가진 버튼
3)JRadioButton: 여러 개 중에서 필수적으로 하나만 선택하는 경우에 사용하는 버튼
ButtonGroup으로 묶어 주어야 하나의 그룹이 됩니다.
4)JCheckbox: 여러 개 중에서 0개 이상을 선택할 수 있도록 할 때 사용하는 버튼

=>라디오 버튼을 배치할 때 유의할 점은 그룹 내의 버튼 중에 하나는 선택된 상태로 시작하도록 해주어야 합니다.
최근의 웹에서는 라디오 버튼 대신에 이미지를 묶어서 보여주는 경우가 많습니다.

7.텍스트 입력 컴포넌트
1)JTextField: 한 줄의 문자열을 입력받기 위한 컴포넌트
2)JPasswordField: 한 줄의 문자열을 입력받는데 EchoChar를 설정해서 입력한 문자열이 아니라 EchoChar가 보이도록 하는 컴포넌트
getPassword()를 호출하면 입력된 문자들을 char[]로 리턴합니다.
비밀번호는 문자 단위로 유효성 검사를 하는 경우가 많기 때문입니다.
3)JTextArea: 여러 줄의 문자열을 입력받기 위한 컴포넌트

8.toString()
=>인스턴스를 문자열로 만들어서 리턴하는 메소드
=>재정의 되어 있지 않으면 클래스이름과 해시코드를 리턴합니다.
=>인스턴스를 출력하는 메소드에 대입하면 toString()의 결과가 출력됩니다.

9.JComboBox
=>여러 개의 항목 중에서 하나의 항목을 선택하기 위한 컴포넌트
=>선택 항목이 여러 개 일 때는 라디오 버튼을 사용하지 않고 JComboBox를 이용하도록 하는 것이 좋습니다.
iOS는 피커를 이용합니다.
=>항목을 설정할 때 String을 매개변수로 받는 것이 아니고 Object를 매개변수로 받는데 그 이유는 화면에 출력할 때 toString()의 결과를 출력하기 때문입니다.













